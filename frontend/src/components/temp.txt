        {/*
                <Leva collapsed />
        <Canvas shadows camera={{ position: [22.54, 8.81, 29.8], zoom: 1, fov: 30 }} gl={{ preserveDrawingBuffer: true }}>
            <group dispose={null}>
              <Suspense fallback={null}>
                <Center back>
                <Float enabled={false} scale={0.75} position={[0, 0.65, 0]} rotation={[0, 0.6, 0]}>
                  <Text1 config={nameConfig} />
                </Float>
                </Center>
                <Center top right front>
                  <Float scale={0.75} position={[0, 0.65, 0]} rotation={[0, 0.6, 0]}>
                    <Text1 config={jobConfig} />
                  </Float>
                  </Center>

                {/*
                  <Center back>
                    <PresentationControls enabled={true} cursor={false} snap={true} global={true}>
                      <TextCircle config={config2} />
                    </PresentationControls>
                </Center>
                                */}
            </Suspense>
            </group>

          <ambientLight />
          //<pointLight position={[10, 10, 10]} />

          <CameraPositionLogger event='mousedown' />
          <Stats />
                    <OrbitControls
              autoRotateSpeed={-0.1}
              zoomSpeed={0.25}
              minZoom={20}
              maxZoom={100}
              enablePan={false}
              dampingFactor={0.05}
              minPolarAngle={-Math.PI / 2}
              maxPolarAngle={(0.99 * Math.PI) / 2}
            />
        </Canvas>

         */}



 const config = useControls({
    meshPhysicalMaterial: false,
    transmissionSampler: false,
    backside: false,
    samples: { value: 10, min: 1, max: 32, step: 1 },
    resolution: { value: 2048, min: 256, max: 2048, step: 256 },
    transmission: { value: 1, min: 0, max: 1 },
    roughness: { value: 0.0, min: 0, max: 1, step: 0.01 },
    thickness: { value: 3.5, min: 0, max: 10, step: 0.01 },
    ior: { value: 1.5, min: 1, max: 5, step: 0.01 },
    chromaticAberration: { value: 0.06, min: 0, max: 1 },
    anisotropy: { value: 0.1, min: 0, max: 1, step: 0.01 },
    distortion: { value: 0.0, min: 0, max: 1, step: 0.01 },
    distortionScale: { value: 0.3, min: 0.01, max: 1, step: 0.01 },
    temporalDistortion: { value: 0.5, min: 0, max: 1, step: 0.01 },
    clearcoat: { value: 1, min: 0, max: 1 },
    attenuationDistance: { value: 0.5, min: 0, max: 10, step: 0.01 },
    attenuationColor: 'red',
    color: 'red',
    bg: '#839681'
  })
#FFD700 Gold
#DBE2E9 Chrome
#9B111E Ruby
#0000FF sapphire

          <OrbitControls
            autoRotateSpeed={-0.1}
            zoomSpeed={0.25}
            minZoom={20}
            maxZoom={100}
            enablePan={false}
            dampingFactor={0.05}
            minPolarAngle={-Math.PI / 2}
            maxPolarAngle={(0.99 * Math.PI) / 2}
          />
          <CameraPositionLogger event='mousedown' />

  const infoConfig = useControls('infoText', {
    text: 'INFO',
    fontSize: { value: 1, min: 0.1, max: 2 },
    fontDepth: { value: 1, min: 0.01, max: 3.5 },
    color: '#DBE2E9'
  })

  const workConfig = useControls('workText', {
    text: 'WORK',
    fontSize: { value: 1, min: 0.1, max: 2 },
    fontDepth: { value: 1, min: 0.01, max: 3.5 },
    color: '#DBE2E9'
  })

  const nameConfig = useControls('nameText', {
    text: 'Zack Valis',
    fontSize: { value: 1, min: 0.1, max: 2 },
    fontDepth: { value: .5, min: 0.01, max: 3.5 },
    color: '#DBE2E9'
  })

  const jobConfig = useControls('jobText', {
    text: 'SOFTWARE DEVELOPER',
    fontSize: { value: .75, min: 0.1, max: 2 },
    fontDepth: { value: .75, min: 0.01, max: 3.5 },
    color: '#FFD700'
  })

    function oscillate(input, min, max) {
    var range = max - min;
    return min + Math.abs(((input + range) % (range * 2)) - range);
  };




$bg-img: url('../static/CIMG0894.JPG');
$bg2-img: url('../static/CIMG1165.JPG');
$fire-img: url('../static/fire.gif');
$fire2-img: url('../static/fire2.gif');

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

%padding-home {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

body, #root {
  margin: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  overflow: visible;
}

.main {
  @include flexbox();
  background-color: black; /* fallback color */
  background-image: $bg-img;
  background-position: center;
  background-size: cover;
  flex-direction: column;
  min-height: 100vh;
  visibility: visible;

  @media all and (max-width: 600px) {
    &__header {
      @include flexbox();
      .canvas {
        position: fixed !important;
        top: 0px;
        left: 0px;
        width: 100vw !important;
        height: 100vh !important;

        Canvas {
          opacity: 0;
          touch-action: auto;
          animation: fade-in 1s ease .25s forwards;

          @keyframes fade-in {
            from {
              opacity: 0;
            }
            to {
              opacity: 1;
            }
          }
        }
      }
      .header {
        .left {
          .name {
            background-color: black;
            color: red;
          }
          .folio {
            background-color: black;
            color: red;
          }
        }
        .center {
          .info {
            background-image: $fire2-img;
            background-position: bottom;
            background-size: contain;
            background-repeat: no-repeat;
          }
          .name {
            background-image: $fire2-img;
            background-position: bottom;
            background-size: 100%;
            //background-size: contain;
            background-repeat: no-repeat;
          }
          .work {
            background-image: $fire2-img;
            background-position: bottom;
            background-size: contain;
            background-repeat: no-repeat;
          }
        }
        .right {
          .availability {
            background-color: black;
            color: red;
          }
          .contact {
            background-color: black;
            color: red;
          }
        }
      }
    }
  }

  &__header {
    flex-flow: row wrap;
    justify-content: space-around;
    //min-width: 98vw;
    //height: 5.5vh;
    overflow: hidden;
    .canvas {
      position: fixed !important;
      top: 0px;
      left: 0px;
      width: 100vw !important;
      height: 100vh !important;

      Canvas {
        opacity: 0;
        touch-action: auto;
        animation: fade-in 1s ease .5s forwards;

        @keyframes fade-in {
          from {
            opacity: 0;
          }
          to {
            opacity: 1;
          }
        }
      }
    }

    .header {
      @include flexbox();
      .left {
        @include order(1);
        .name {
          padding-right: .5rem;
          background-color: black;
          color: red;
        }
        .folio {
          @include order(2);
          margin-right: auto;
          background-color: black;
          color: red;
        }
      }
      .center {
        @include order(2);
        .info {
          background-image: $fire2-img;
          background-position: bottom;
          background-size: contain;
          background-repeat: no-repeat;
          margin: 0.2em;
          width: 8rem;
          height: 5rem;
          overflow: hidden;
        }
        .name {
          background-image: $fire2-img;
          background-position: bottom;
          background-size: 100%;
          //background-size: contain;
          background-repeat: no-repeat;
          margin: 0.2em;
          width: 18rem;
          height: 5.5rem;
          overflow: hidden;
        }
        .work {
          justify-content: space-around;
          background-image: $fire2-img;
          background-position: bottom;
          background-size: contain;
          background-repeat: no-repeat;
          margin: 0.2em;
          width: 8rem;
          height: 5rem;
          overflow: hidden;
        }
      }
      .right {
        @include order(3);
        .availability {
          background-color: black;
          color: red;
        }
        .contact {
          padding-top: .6rem;
          padding-left: .5rem;
          display: flex;
          background-color: black;
          color: red;
        }
      }
    }
  }

  &__home {
    visibility: hidden;
    .home {
      &__hero {
        display: flex;
        height: 70vh; // Take up 100% of the viewport height
        min-height: 100px;
        overflow: hidden;
        background-image: $bg2-img;
        background-position: top;
        background-size: cover;
        background-repeat: no-repeat;

        .text {
          width: 100vw;
          //padding-left: 7rem;
          padding-top: 17rem;
          text-align: center;
          //background-color: black;
          color: red;
        }
      }
    }
  }

  &__footer {
    visibility: visible;
    position: relative;
    height: 5vh;
    //width: 100%;
    padding-left: 4rem;
    padding-right: 4rem;
    margin-top: .5rem;
    padding-bottom: .5rem;
    background-color: grey;
    //position: fixed;
    //bottom: 0;

    .footer {
      display: flex;
      &__left {
        .place {

        }
        .time {

        }
      }
      &__center {
        .socials {

        }
      }
      &__right {
        .credit {

        }
      }
    }
  }
}
